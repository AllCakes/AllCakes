# Generated by Django 3.2.5 on 2021-11-21 08:16

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cakeManage', '0001_initial'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='order',
            name='레터링위치',
        ),
        migrations.RemoveField(
            model_name='order',
            name='희망픽업시간',
        ),
        migrations.RemoveField(
            model_name='order',
            name='희망픽업일',
        ),
        migrations.RemoveField(
            model_name='store',
            name='location',
        ),
        migrations.AddField(
            model_name='cake',
            name='price',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, django.core.validators.MaxValueValidator(100000))]),
        ),
        migrations.AddField(
            model_name='cake',
            name='size',
            field=models.CharField(choices=[('보틀케이크', '보틀케이크'), ('도시락케이크', '도시락케이크'), ('1~2인분', '1~2인분'), ('3~4인분', '3~4인분'), ('5인분 이상', '5인분 이상')], default='보틀케이크', max_length=10),
        ),
        migrations.AddField(
            model_name='order',
            name='lettering_position',
            field=models.CharField(choices=[('판 위에 레터링', '판 위에 레터링'), ('케이크에 직접 레터링', '케이크에 직접 레터링')], default='케이크에 직접 레터링', max_length=30, null=True, verbose_name='레터링 위치'),
        ),
        migrations.AddField(
            model_name='order',
            name='pay_price',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100000)]),
        ),
        migrations.AddField(
            model_name='order',
            name='pickup_date',
            field=models.CharField(default=datetime.date.today, max_length=30, null=True, verbose_name='희망 픽업일'),
        ),
        migrations.AddField(
            model_name='order',
            name='pickup_time',
            field=models.CharField(choices=[('10:00', '10:00'), ('10:30', '10:30'), ('11:00', '11:00'), ('11:30', '11:30'), ('12:00', '12:00'), ('12:30', '12:30'), ('13:00', '13:00'), ('14:30', '14:30'), ('15:00', '15:00'), ('15:30', '15:30'), ('16:00', '16:00'), ('16:30', '16:30'), ('17:00', '17:00'), ('17:30', '17:30'), ('18:00', '18:00'), ('18:30', '18:30')], default='10:00', max_length=30, null=True, verbose_name='희망 시간'),
        ),
        migrations.AddField(
            model_name='order',
            name='prev_price',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100000)]),
        ),
        migrations.AddField(
            model_name='store',
            name='locationGu',
            field=models.CharField(default='00구/00시', max_length=10, verbose_name='지역(구/시)'),
        ),
        migrations.AddField(
            model_name='store',
            name='price',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, django.core.validators.MaxValueValidator(100000))], verbose_name='메뉴 평균 금액'),
        ),
        migrations.AlterField(
            model_name='cake',
            name='referred_store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cake', to='cakeManage.store'),
        ),
        migrations.AlterField(
            model_name='store',
            name='locationSi',
            field=models.CharField(choices=[('서울', '서울'), ('경기', '경기'), ('인천', '인천'), ('강원', '강원'), ('대전', '대전'), ('세종', '세종'), ('충남', '충남'), ('충북', '충북'), ('부산', '부산'), ('울산', '울산'), ('경남', '경남'), ('경북', '경북'), ('대구', '대구'), ('광주', '광주'), ('전남', '전남'), ('전북', '전북'), ('제주', '제주')], default='서울', max_length=10, verbose_name='시'),
        ),
        migrations.CreateModel(
            name='PercentCoupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('use_from', models.DateTimeField(auto_now_add=True)),
                ('use_to', models.DateTimeField()),
                ('percent', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merchant_uid', models.CharField(blank=True, max_length=120, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=120, null=True)),
                ('amount', models.PositiveIntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('success', models.BooleanField(default=False)),
                ('transaction_status', models.CharField(blank=True, max_length=220, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cakeManage.order')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='AmountCoupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('use_from', models.DateTimeField(auto_now_add=True)),
                ('use_to', models.DateTimeField()),
                ('amount', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100000)])),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='amount_coupon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cakeManage.amountcoupon'),
        ),
        migrations.AddField(
            model_name='order',
            name='percent_coupon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cakeManage.percentcoupon'),
        ),
    ]
